# kubectl -n keycloak-ns exec -it keycloak-6988486fb7-lt7q2 -- /bin/sh
# kubectl -n keycloak-ns logs	keycloak-7dd7ccd944-z4fgh
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak-ns
  labels:
    app: keycloak
    layer: application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:20.0.0-0
        imagePullPolicy: Always
        args: ["start", "--https-port=8443", "--https-client-auth=none", "--metrics-enabled=true"]

        env:

        - name: KEYCLOAK_ADMIN
          value: "admin"

        - name: KEYCLOAK_ADMIN_PASSWORD
          value: "admin"

        - name: KEYCLOAK_FRONTEND_URL
          value: "https://keycloak.kube.local"

        - name: KC_DB
          value: "postgres"

        - name: KC_DB_URL
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_DB_URL_KEY
              name: keycloak-postgres-secret

        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_USER_KEY
              name: keycloak-postgres-secret

        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_USER_PASSWORD_KEY
              name: keycloak-postgres-secret

        - name: KC_PROXY
          value: "edge"

        - name: KC_HTTPS_CERTIFICATE_FILE
          value: "/cert/cert.pem"

        - name: KC_HTTPS_CERTIFICATE_KEY_FILE
          value: "/cert/cert.key"

        - name: KC_HOSTNAME_STRICT
          value: "false"

        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"

        - name: KC_METRICS_ENABLED
          value: "true"

        - name: KC_FEATURES
          value: "token-exchange"

        - name: KC_HTTP_ENABLED
          value: "false"

        - name: KC_HTTPS_ENABLED
          value: "true"

        - name: PROXY_ADDRESS_FORWARDING
          value: "true"

        - name: KC_HOSTNAME_STRICT_BACKCHANNEL
          value: "false"

        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443

        readinessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 2
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5

        livenessProbe:
          tcpSocket:
            port: 8080
          failureThreshold: 6
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5

        resources:
          limits:
            cpu: 500m
            memory: 3Gi
          requests:
            cpu: 10m
            memory: 512Mi

        volumeMounts:

          - name: pod-cert
            mountPath: "/cert/"

      volumes:

        - name: pod-cert
          csi:
            driver: csi.cert-manager.io
            readOnly: true
            volumeAttributes:
              csi.cert-manager.io/issuer-kind: ClusterIssuer
              csi.cert-manager.io/issuer-name: vault-pki-cluster-clusterissuer
              csi.cert-manager.io/issuer-group: cert-manager.io
              csi.cert-manager.io/common-name: keycloak.cluster.local
              csi.cert-manager.io/dns-names: ${POD_NAME}.${POD_NAMESPACE}.pod.cluster.local
              csi.cert-manager.io/duration: 720h
              csi.cert-manager.io/renew-before: 4h
              csi.cert-manager.io/is-ca: "false"
              csi.cert-manager.io/key-usages: digital signature,key encipherment,server auth,client auth
              csi.cert-manager.io/certificate-file: cert.pem
              csi.cert-manager.io/privatekey-file: cert.key
              csi.cert-manager.io/ca-file: ca.pem
