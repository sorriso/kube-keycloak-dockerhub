apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: keycloak-ns
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: postgres
    component: database
spec:
  replicas: 2
  serviceName: keycloak-postgress
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: postgres
      component: database
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: postgres
        component: database
    spec:
      securityContext:
        fsGroup: 1001

      containers:
      - env:
        - name: BITNAMI_DEBUG
          value: "true"

        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"

        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql

        - name: PGDATA
          value: /bitnami/postgresql/data

        - name: POSTGRESQL_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_POSTGRES_PASSWORD_KEY
              name: keycloak-postgres-secret

        - name: POSTGRESQL_USERNAME
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_USERNAME_KEY
              name: keycloak-postgres-secret

        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_PASSWORD_KEY
              name: keycloak-postgres-secret

        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: POSTGRESQL_DATABASE_KEY
              name: keycloak-postgres-secret

        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"

        - name: POSTGRESQL_ENABLE_TLS
          value: "no"

        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"

        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"

        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"

        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"

        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error

        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit

        image: docker.io/bitnami/postgresql:14.4.0-debian-11-r20
        imagePullPolicy: Always

        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        name: postgresql

        ports:
        - containerPort: 5432
          name: tcp-postgresql
          protocol: TCP

        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5

        resources:
          requests:
            cpu: 250m
            memory: 256Mi

        securityContext:
          runAsUser: 1001

        volumeMounts:

        - mountPath: /dev/shm
          name: dshm

        - mountPath: /bitnami/postgresql
          name: keycloak-postgres-volume-claim

      volumes:
      - emptyDir:
          medium: Memory
        name: dshm

  volumeClaimTemplates:

  - metadata:
      name: keycloak-postgres-volume-claim
    spec:
      accessModes: [ ReadWriteOnce ]
      storageClassName: longhorn-retain
      resources:
        requests:
          storage: 250Mi
